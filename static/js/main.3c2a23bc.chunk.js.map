{"version":3,"sources":["misc/firebase.js","context/profile.context.js","components/PrivateRoute.js","components/PublicRoute.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","components/EditableInput.js","misc/helpers.js","components/dashboard/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room-context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/PresenceDot.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","pages/SignIn.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","isOfflineForDatabase","state","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","ref","uid","on","snap","val","data","name","createdAt","avatar","email","snapshot","onDisconnect","set","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","PublicRoute","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","useRef","onFormChange","onSubmit","a","current","check","newRoomdata","admins","currentUser","push","Alert","info","error","message","className","Button","block","color","onClick","Icon","icon","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","getNameInitials","splitName","toUpperCase","split","length","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","border-radius","rotate","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","provider","linkWithPopup","Tag","closable","onClose","GoogleAuthProvider","FacebookAuthProvider","Dashboard","onSignOut","newData","success","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","RoomInfoBtnModal","v","memo","EditRoomBtnDrawer","chatId","useParams","updateData","newName","newDesc","Top","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapShots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","getColor","presence","getText","toLocaleDateString","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ProfileInfoBtnModal","btnProps","shortName","memberSince","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","canShowIcons","isLiked","isMsgAuthorAdmin","isAuthor","canGrantAdmin","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","scrollTop","clientHeight","threshold","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","Grid","Row","Col","xs","md","exact","path","SignIn","signInWithProivider","signInWithPopup","additionalUserInfo","user","isNewUser","displayName","mdOffset","Panel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c2a23bc.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n\r\napiKey: \"AIzaSyCYxaTVOq8s0RWjjoRPxTMnzY3iGnkQai8\",\r\n    authDomain: \"chat-app-dafd9.firebaseapp.com\",\r\n    projectId: \"chat-app-dafd9\",\r\n    storageBucket: \"chat-app-dafd9.appspot.com\",\r\n    messagingSenderId: \"191573586326\",\r\n    appId: \"1:191573586326:web:328e29a6b5b82ab7e1adb7\"\r\n  };\r\n\r\n   const app = firebase.initializeApp(config);\r\n   export const auth= app.auth();\r\n   export const database = app.database();\r\n   export const storage = app.storage();\r\n\r\n   ","/* eslint-disable */\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        // console.log('authObj.uid', authObj.uid);\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n          // console.log(profileData);\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', (snapshot) => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authUnsub();\r\n\r\n      database.ref('.info/connected').off();\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children,...routeProps }) => {\r\n\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if(isLoading && !profile) {\r\n    return <Container>\r\n      <Loader center vertical size =\"md\" content=\"Loading\" speed=\"slow\" />\r\n    </Container>\r\n  }\r\n\r\n  if(!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return(\r\n    <Route {...routeProps}>\r\n      {children}\r\n\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children,...routeProps }) => {\r\n\r\n  const { profile, isLoading } =  useProfile();\r\n\r\n  if(isLoading && !profile) {\r\n    return <Container>\r\n      <Loader center vertical size =\"md\" content=\"Loading\" speed=\"slow\" />\r\n    </Container>\r\n  }\r\n\r\n  if(profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n   return(\r\n    <Route {...routeProps}>\r\n      {children}\r\n\r\n    </Route>\r\n  )\r\n};\r\n\r\nexport default PublicRoute","import { useCallback, useState, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n  const ref = useRef(null);\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      };\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n  return [ref, value];\r\n}\r\n","/* eslint-disable */\r\nimport React, { useCallback, useRef, useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  ControlLabel,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  Modal,\r\n  Schema,\r\n} from 'rsuite';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomdata = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid] : true,\r\n      }\r\n    };\r\n\r\n    try {\r\n      await database.ref('rooms').push(newRoomdata);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new chat room\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New chat room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","/* eslint-disable */\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Icon, Input, InputGroup } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = \"\",\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","/* eslint-disable */\r\nexport function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split('');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n    return result;\r\n  }, {});\r\n}\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../../misc/helpers';\r\n\r\n\r\n\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps}) => {\r\n  return <Avatar circle {...avatarProps}>{\r\n    getNameInitials(name) }\r\n  </Avatar>\r\n  \r\n}\r\n\r\nexport default ProfileAvatar;","/* eslint-disable */\r\nimport React, { useState, useRef } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport ProfileAvatar from './ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\n// const fileInputTypes= 'file'\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/jpg'];\r\n// const acceptedFileTypes=['file']\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File process error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const { profile } = useProfile();\r\n  const [img, setImg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const avatarEditorRef = useRef();\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type $(file.type)`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      // console.log('updates', updates)\r\n      await database.ref().update(updates);\r\n\r\n  //  const userAvatarRef = database\r\n  //       .ref(`/profiles/${profile.uid}`)\r\n  //       .child('avatar');\r\n\r\n      // userAvatarRef.set(downloadUrl);\r\n\r\n      setIsLoading(false);\r\n\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  //  color={[255, 255, 255, 0.6]} // RGBA\r\n                  //  scale={1.2}\r\n                  border-radius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","//  after fb logout and login with google i end up one single account not two diff\r\n/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from'firebase/app';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  // console.log(auth.currentUser);\r\n\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\nsetIsConnected(p => {\r\n  return{\r\n    ...p,\r\n    [providerId]: value,\r\n  };\r\n});\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n\r\n    try {\r\n\r\n      if(auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You can not disconnect from ${providerId}`)\r\n      }\r\n\r\n       await auth.currentUser.unlink(providerId);\r\n     updateIsConnected(providerId, false);\r\n     Alert.info(`Disconnected from ${providerId}`, 4000);\r\n\r\n    } catch (err){\r\nAlert.error(err.message, 4000);\r\n    }\r\n  }\r\n\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async (provider) => {\r\n    try {\r\n     await auth.currentUser.linkWithPopup(provider);\r\nAlert.info(`Linked to ${provider.providerId}`, 4000);\r\n\r\nupdateIsConnected(provider.providerId, true);\r\n\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000)\r\n    }\r\n    }\r\n\r\n  const linkFacebook = () => {\r\nlink(new firebase.auth.FacebookAuthProvider())\r\n  }\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider())\r\n  }\r\n\r\n  return <div>\r\n   {isConnected['google.com'] && (\r\n<Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n  <Icon icon=\"google\" /> Connected\r\n</Tag>\r\n   )}\r\n{isConnected['facebook.com'] && (\r\n<Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n  <Icon icon=\"facebook\" /> Connected\r\n</Tag>\r\n)}\r\n\r\n<div className=\"mt-2\">\r\n{!isConnected['google.com'] && \r\n  <Button block color=\"green\" onClick={linkGoogle}>\r\n  <Icon icon=\"google\" /> Link to Google\r\n  </Button>\r\n}\r\n{!isConnected['facebook.com'] && \r\n  <Button block color=\"blue\" onClick={linkFacebook}>\r\n  <Icon icon=\"facebook\" /> Link to Facebook\r\n  </Button>\r\n}\r\n\r\n</div>\r\n\r\n  </div>;\r\n};\r\n\r\nexport default ProviderBlock;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database } from '../../misc/firebase';\r\nimport EditableInput from '../EditableInput';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n\r\n  //nickname updated coding\r\n  const onSave = async newData => {\r\n    // console.log(newData;\r\n\r\n    // const userNicknameRef = database\r\n    //   .ref(`/profiles/${profile.uid}`)\r\n    //   .child('name');\r\n\r\n    try {\r\n      // await userNicknameRef.set(newData);\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n// console.log('updates', updates)\r\n      await database.ref().update(updates)\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n  //\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        {/* providerblock coding */}\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const isMobile = useMediaQuery('max-width:992px');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","/* eslint-disable */\r\nimport  React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { database } from \"../misc/firebase\";\r\nimport { transformToArrWithId } from \"../misc/helpers\";\r\n\r\n\r\n\r\nconst RoomsContext = createContext();\r\n\r\n\r\nexport const RoomsProvider = ({children}) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', (snap) =>{\r\n        const data = transformToArrWithId(snap.val())\r\n    setRooms(data);\r\n    })\r\n\r\nreturn () => {\r\n  roomListRef.off();\r\n}\r\n\r\n  },[]);\r\nreturn <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../dashboard/ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)}\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {\r\n          lastMessage ?\r\n          <>\r\n<div className=\"d-flex align-items-center\">\r\n  <ProfileAvatar src={lastMessage.author.avatar} name={lastMessage.author.name} size=\"sm\" />\r\n</div>\r\n\r\n<div className=\"text-disappear ml-2\">\r\n\r\n  <div className=\"italic\">{lastMessage.author.name}</div>\r\n  <span>{lastMessage.text || lastMessage.file.name}</span>\r\n\r\n</div>\r\n\r\n          </>:\r\n          <span>No messages yet...</span>\r\n        }\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location =  useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey= {location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","/* eslint-disable */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n\r\n  const topSidebarRef = useRef();\r\nconst [height, setHeight] = useState(0);\r\n\r\nuseEffect(() => {\r\nif(topSidebarRef.current) {\r\nsetHeight( topSidebarRef.current.scrollHeight)\r\n}\r\n},[topSidebarRef]);\r\n\r\n\r\n  return(\r\n    <div className=\"h-100 pt-2\">\r\n\r\n <div ref={topSidebarRef}>\r\n<DashboardToggle />\r\n<CreateRoomBtnModal />\r\n<Divider>Join conversation</Divider>\r\n </div>\r\n     <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);\r\n","import React,{memo} from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n\r\n<Modal.Header>\r\n  <Modal.Title>\r\n    About {name}\r\n  </Modal.Title>\r\n</Modal.Header>\r\n<Modal.Body>\r\n  <h6 className=\"mb-1\">Description</h6>\r\n  <p>{description}</p>\r\n</Modal.Body>\r\n<Modal.Footer>\r\n\r\n  <Button block onClick={close}>\r\n    close\r\n  </Button>\r\n</Modal.Footer>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../EditableInput';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\nconst { chatId } = useParams();\r\nconst isMobile = useMediaQuery('(max-width: 992px)')\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Successfully updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can not be empty\"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            on={onDescriptionSave}\r\n            emptyMsg=\"Description can not be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","/* eslint-disable */\r\nimport React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n        {/* ws= whitespace */}\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapShots = await Promise.all(uploadPromises);\r\n      const shapePromises = uploadSnapShots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  });\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (error) {\r\n        setIsUploading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","/* eslint-disable */\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from '../bottom/AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n\r\n      const updates = {};\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../dashboard/ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({profile , ...btnProps}) => {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const { name, avatar, createdAt } = profile;\r\n\r\n  const shortName = profile.name.split(' ')[0];\r\n\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          \r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Badge, Tooltip, Whisper, IconButton, Icon } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}>\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n         >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n           />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React  from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n\r\n  const { isOpen, open, close } = useModalState()\r\n  return(\r\n    <>\r\n<input type=\"image\" src={src} alt=\"file\" onClick={open} className=\"mw-100 mh-100 w-auto\" />\r\n<Modal show={isOpen} onHide={close}>\r\n<Modal.Header>\r\n  <Modal.Title>{fileName}</Modal.Title>\r\n</Modal.Header>\r\n<Modal.Body>\r\n  <div>\r\n    <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n  </div>\r\n</Modal.Body>\r\n<Modal.Footer>\r\n  <a href={src} target=\"blank\" rel=\"noopener noreferrer\">\r\nView original\r\n  </a>\r\n</Modal.Footer>\r\n</Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImgBtnModal;","/* eslint-disable */\r\nimport React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../dashboard/ProfileAvatar';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport { Button } from 'rsuite';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return <audio controls>\r\n<source src={file.url} type=\"audio/mp3\" />\r\nYour browser does not support the audio element.\r\n    </audio>\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove admin permission'\r\n                : 'Give admin in this room'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => handleLike(message.id)}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {text && <span className=\"word-break-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","/* eslint-disable */\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { auth, database, storage } from '../../../misc/firebase';\r\nimport { groupBy, transformToArrWithId } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage.threshold;\r\n}\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n      messagesRef.off();\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n\r\n          setMessages(data);\r\n\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin permission removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin permission granted';\r\n          }\r\n        }\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n\r\n          alertMsg = 'Like removed';\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Like added';\r\n        }\r\n      }\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        Alert.info('Messages has been deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message);\r\n      }\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n      items.push(...msgs);\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet...</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\n\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\n\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room-context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\n\r\nconst Home = () => {\r\n\r\nconst isDesktop =  useMediaQuery('(min-width: 992px)');\r\n\r\nconst { isExact } = useRouteMatch();\r\n\r\nconst canRenderSidebar = isDesktop || isExact;\r\n\r\n\r\n  return(\r\n    <RoomsProvider>\r\n\r\n    <Grid fluid className=\"h-100\">\r\n  <Row className=\"h-100\">\r\n    {canRenderSidebar &&\r\n    <Col xs={24} md={8} className=\"h-100\">\r\n      <Sidebar />\r\n    </Col>\r\n    }\r\n\r\n    <Switch>\r\n<Route exact path=\"/chat/:chatId\">\r\n<Col xs={24} md={16} className=\"h-100\">\r\n<Chat />\r\n</Col>\r\n</Route>\r\n<Route>\r\n  {isDesktop && <Col xs={24} md={16} className=\"h-100\">\r\n    <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n  </Col>}\r\n</Route>\r\n\r\n    </Switch>\r\n  </Row>\r\n    </Grid>\r\n    </RoomsProvider>\r\n  )\r\n};\r\n\r\nexport default Home;","/* eslint-disable */\r\nimport React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\nconst signInWithProivider = async provider => {\r\n\r\n   try {\r\n     const {additionalUserInfo, user }  = await auth.signInWithPopup(provider);\r\n\r\n  if(additionalUserInfo.isNewUser) {\r\n     await database.ref(`/profiles/${user.uid}`).set({\r\n      name: user.displayName,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP\r\n    })\r\n  }\r\n\r\nAlert.success('Signed in', 4000);\r\n   }catch (err) {\r\n     Alert.error(err.message, 4000);\r\n   }\r\n\r\n \r\n};\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProivider(new firebase.auth.FacebookAuthProvider() );\r\n  }\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProivider(new firebase.auth.GoogleAuthProvider() );\r\n  };\r\n\r\n  return (\r\n  <Container>\r\n    <Grid className=\"mt-page\">\r\n      <Row>\r\n        <Col xs={24} md={12} mdOffset={6}>\r\n          <Panel>\r\n            <div className=\"text-center\">\r\n              <h2>Welcome to Chat</h2>\r\n              <p>Progressive chat platform for neophytes</p>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                <Icon  icon=\"facebook\" /> Continue with Facebook\r\n              </Button>\r\n\r\n              <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                <Icon  icon=\"google\" /> Continue with Google\r\n              </Button>\r\n            </div>\r\n          </Panel>\r\n         </Col>\r\n      </Row>\r\n    </Grid>\r\n  </Container>\r\n  )\r\n}\r\n\r\nexport default SignIn","import React from 'react';\nimport {  Switch } from 'react-router';\n// import { Switch, Route } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\n\n\nimport './styles/main.scss';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n   <Switch>\n    <PublicRoute path=\"/signin\">\n      <SignIn />\n    </PublicRoute>\n    <PrivateRoute path=\"/\">\n      <Home />\n    </PrivateRoute>\n  </Switch>\n  </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<BrowserRouter> \n<App />\n</BrowserRouter> ,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}